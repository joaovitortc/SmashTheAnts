{"mappings":"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","sources":["Second Semester/WEB/game/script.js"],"sourcesContent":["\r\nlet hitbox = document.getElementById(\"hitbox\");\r\nconst insect = document.getElementById(\"insect\");\r\nconst score = document.getElementById(\"score\");\r\nconst gameOver = document.getElementById(\"gameOver\");\r\nconst scoreMessage = document.getElementById(\"scoreMessage\");\r\nconst bestScoreMessage = document.getElementById(\"bestScoreMessage\");\r\nconst restart = document.getElementById(\"restart\");\r\nlet timeLeft = 60;\r\n\r\nlet restartSnd = new Audio('restart.mp3');\r\nlet bombSnd = new Audio('explosion.mp3');\r\n\r\n\r\nlet isKilling = false; //variable to avoid double/triple killing the same insect\r\nlet scoreCount = 0;\r\nlet bestScore = 0;\r\nlet bomb = false;\r\n\r\nhitbox.addEventListener(\"click\", () => {\r\n    \r\n    if(!isKilling) {\r\n        isKilling = true;\r\n        killInsect()\r\n    }\r\n\r\n});\r\n\r\nfunction killInsect() {\r\n    sound();\r\n    insect.style.backgroundImage = \"url('smashed_ant.png')\";\r\n\r\n        setTimeout(() => {\r\n            moveInsect();\r\n\r\n            isKilling = false;\r\n        } , (Math.random() + 0.2) * 600); // minimum 0.12s - maximum 0.72s of transition\r\n        updateScore();    \r\n    \r\n}\r\n\r\nfunction moveInsect() {\r\n    //random position \r\n    let x = Math.random() * (window.innerWidth - 100);\r\n    let y = Math.random() * (window.innerHeight - 150);\r\n    //random angle to rotate\r\n    let ang = Math.random() * 360;\r\n    //random size\r\n    let size = Math.random() + 0.2;\r\n\r\n    bomb = Math.random() < 0.24;\r\n\r\n    if (bomb) {\r\n        insect.style.backgroundImage = \"url('bomb.png')\";\r\n    } else {\r\n        insect.style.backgroundImage = \"url('regular_ant.png')\";\r\n    }\r\n\r\n    insect.style.transform = `translate(${x}px, ${y}px) rotate(${ang}deg) scale(${size})`;\r\n    \r\n    if (bomb) {\r\n        insect.addEventListener(\"click\", handleBombClick);\r\n        setTimeout(() => {\r\n            // Remove the click event listener after 2 seconds\r\n            insect.removeEventListener(\"click\", handleBombClick);\r\n            insect.style.backgroundImage = \"url('regular_ant.png')\";\r\n            bomb = false;\r\n            return;\r\n        }, (Math.random() + 0,5) * 500);\r\n\r\n    } else {\r\n        insect.removeEventListener(\"click\", handleBombClick);\r\n    }\r\n}\r\n\r\nfunction handleBombClick() {\r\n    bombSound();\r\n    insect.style.backgroundImage = \"url('explosion.png')\";\r\n    insect.removeEventListener(\"click\", handleBombClick);\r\n    setTimeout(() => {\r\n    finishGame();\r\n}, 240)\r\n    \r\n}\r\n\r\nfunction restartGame() {\r\n    restart.addEventListener(\"click\", () => {\r\n        restartSound();\r\n        insect.style.backgroundImage = \"url('regular_ant.png')\";\r\n        insect.style.display = \"block\";\r\n        gameOver.style.display = \"none\";\r\n        timeLeft = 60; //reset timer\r\n        scoreCount = 0; // reset score\r\n        finalMessage.textContent = \"Game Over\" // reset final message\r\n        score.textContent = `Score: ${scoreCount}`; //reset score message\r\n\r\n    })\r\n\r\n}\r\n\r\nfunction finishGame() {\r\n    insect.style.display = \"none\";\r\n    scoreMessage.textContent = `Your score was: ${scoreCount}`;\r\n    bestScoreMessage.textContent= `Your best score so far is: ${findBestScore()}`;\r\n    gameOver.style.display = \"block\";\r\n    restartGame();\r\n}\r\n\r\n\r\nfunction updateScore() {\r\n    if (!bomb) {\r\n        scoreCount += 1;\r\n    }\r\n    score.textContent = `Score: ${scoreCount}`;\r\n}\r\n\r\nfunction findBestScore() {\r\n    if (scoreCount > bestScore) {\r\n        bestScore = scoreCount;\r\n    }\r\n    return bestScore;\r\n}\r\n\r\n// Function to update the countdown timer\r\nfunction updateTimer() {\r\n    const timer = document.getElementById('timer');\r\n    const minutes = Math.floor(timeLeft / 60);\r\n    const seconds = timeLeft % 60;\r\n    \r\n    // Display the time in the \"mm:ss\" format\r\n    timer.textContent = `Time: ${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\r\n    \r\n    // Check if the timer has reached 0\r\n    if (timeLeft === 0) {\r\n        finishGame();\r\n        const finalMessage = document.getElementById('finalMessage');\r\n        finalMessage.textContent = \"Time's up\"\r\n    } else {\r\n        timeLeft--;\r\n    }\r\n}\r\n\r\n// Call the updateTimer function every 1000 milliseconds (1 second)\r\nconst interval = setInterval(updateTimer, 1000);\r\n\r\nfunction sound() {\r\n    let random = Math.random();\r\n    let snd;\r\n    if ( random > 0.5) {\r\n        snd = new Audio('splash_1.mp3');\r\n    } else {\r\n        snd = new Audio('splash_2.mp3');\r\n    }\r\n    snd.play();\r\n}\r\n\r\nfunction bombSound() {\r\n    bombSnd.play();\r\n}\r\n\r\nfunction restartSound() {\r\n    restartSnd.play();\r\n}\r\n\r\n\r\n// scoreboard with 3 best results -> just one result - easy to make 3 (push array)\r\n// work on cellphone -> OK? not responsive but way better now\r\n\r\n// ------------- after\r\n// is it too high of a dream to think that we could do a multiplayer scoreboard? keep track of all user? HOW??\r\n// -> sql database, user data...\r\n\r\n\r\n\r\n\r\n"],"names":[],"version":3,"file":"index.513cc7c1.js.map","sourceRoot":"/__parcel_source_root/"}